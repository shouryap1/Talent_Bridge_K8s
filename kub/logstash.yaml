# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: logstash
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: logstash
#   template:
#     metadata:
#       labels:
#         app: logstash
#     spec:
#       containers:
#       - name: logstash
#         image: docker.elastic.co/logstash/logstash:7.17.10
#         ports:
#         - containerPort: 5044
#         env:
#         - name: xpack.monitoring.enabled
#           value: "false" # Ensure this is correctly formatted as a string
#         volumeMounts:
#         - name: app-log
#           mountPath: /home/jenkins/TalentBridge_K8s/app.log
#           subPath: app.log
#         - name: logstash-conf
#           mountPath: /home/jenkins/TalentBridge_K8s/logstash.conf
#           subPath: logstash.conf
#       volumes:
#       - name: app-log
#         hostPath:
#           path: /var/lib/jenkins/workspace/TalentBridge_K8s/app.log
#           type: FileOrCreate  # Allow for file creation if it doesn't exist
#       - name: logstash-conf
#         hostPath:
#           path: /var/lib/jenkins/workspace/TalentBridge_K8s/logstash.conf
#           type: FileOrCreate  # Allow for file creation if it doesn't exist

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: logstash
# spec:
#   selector:
#     app: logstash
#   ports:
#   - protocol: TCP
#     port: 5044
#     targetPort: 5044
#   type: ClusterIP
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
data:
  logstash.conf: |
input {
    file {
        path => "/home/jenkins/TalentBridge_K8s/app.log"    # Replace with the actual path to your app.log file
        start_position => "beginning" # Reads the log from the start; remove this after first run if not needed
        sincedb_path => "/dev/null"   # Prevents storing file state, useful for testing
    }
}

output {
    elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "logstash3"
        manage_template => true
        template_overwrite => true
        # Add these lines for more robust indexing
        action => "create"
        document_type => "_doc"
    }
    stdout { 
        codec => rubydebug
    }
}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-log-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.17.10
        ports:
        - containerPort: 5044
        env:
        - name: xpack.monitoring.enabled
          value: "false"
        volumeMounts:
        - name: app-log
          mountPath: /home/jenkins/TalentBridge_K8s/app.log
          subPath: app.log
        - name: logstash-conf
          mountPath: /usr/share/logstash/pipeline/logstash.conf
          subPath: logstash.conf
      volumes:
      - name: app-log
        persistentVolumeClaim:
          claimName: app-log-pvc
      - name: logstash-conf
        configMap:
          name: logstash-config
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 5044
    targetPort: 5044
  type: ClusterIP